?start: gherkin_document

?gherkin_document: _NL* (feature? | _INDENT feature? _DEDENT)

//Feature! := FeatureHeader Background? ScenarioDefinition* Rule*
//FeatureHeader! := #Language? Tags? #FeatureLine DescriptionHelper

feature: [tag_lines] feature_line [_INDENT [description] [background] [scenarios] _DEDENT]

description: (STRING _NL)+

background: background_line [_INDENT steps _DEDENT]
background_line: BACKGROUND [STRING] _NL?

scenarios: scenario*

feature_header: [tag_lines]
feature_line: FEATURE STRING _NL?

scenario: [tag_lines] scenario_line{SCENARIO} [_INDENT [steps] _DEDENT] -> scenario
        | [tag_lines] scenario_line{SCENARIO_OUTLINE} [_INDENT [steps] examples _DEDENT] -> scenario_outline
scenario_line{type}: type STRING _NL?

examples: example_line example_table
example_line: EXAMPLES [STRING] _NL?

example_table: example_table_row example_table_row+
example_table_row: /\|.*\|/ _NL


steps: givens? (whens | thens) *

givens: step{GIVEN}+ (step{AND} | step{BUT})*
whens: step{WHEN}+ (step{AND} | step{BUT})*
thens: step{THEN}+ (step{AND} | step{BUT})*

// step{type}: step_line{type} (_INDENT step_arg _DEDENT)?
step{type}: step_line{type}
step_line{type}: type STRING _NL?


step_arg: [step_docstring _NL] [data_table]

data_table: data_table_row (_NL data_table_row)+ _NL
data_table_row: "|" (/.*?(?<!\\)(\\\\)*?\|/)+

tag: /@[^\s]+/
tag_line: tag+ _NL
tag_lines: tag_line+

//string: /[^\n]+/
// anything but new lines and comments.
// Use low priority (-1), so that we attempt to first match other terminals with priority 0 (the default).
// This is needed to avoid having "description" greedy matching other rules like "background" and "scenarios"
STRING.-1: /.+/

GIVEN: "Given "
WHEN: "When "
THEN: "Then "
AND: "And "
BUT: "But "

SCENARIO: "Scenario:"
SCENARIO_OUTLINE: "Scenario Outline:" | "Scenario Template:"
BACKGROUND: "Background:"
FEATURE: "Feature:"
EXAMPLES: "Examples:" | "Scenarios:"

// TODO: Probably the following does not need the negative lookbehind part
//step_docstring: /"""\n.*?(?<!\\)(\\\\)*?\n\s*"""/is
//              | /'''\n.*?(?<!\\)(\\\\)*?\n\s*'''/is

step_docstring: /"""\n.*?\n\s*"""/is

// %import common.ESCAPED_STRING -> string
%import common.WS_INLINE
%import common.LETTER
%import common.NUMBER
%import common.CNAME

%declare _INDENT _DEDENT
%ignore WS_INLINE

COMMENT_LINE: /#.*/ _NL
%ignore COMMENT_LINE

// _NL: /(\r?\n[\t ]*)+/

_NL: /(\r?\n[\t ]*)+/
